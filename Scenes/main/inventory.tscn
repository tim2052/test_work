[gd_scene load_steps=7 format=3 uid="uid://bak72i7m0lma4"]

[ext_resource type="PackedScene" uid="uid://biop00nj4bkwh" path="res://Scenes/main/panel.tscn" id="1_aqgha"]
[ext_resource type="Texture2D" uid="uid://mxq3la1vp0op" path="res://Assets/black.png" id="1_g7p03"]

[sub_resource type="GDScript" id="GDScript_ubhp6"]
script/source = "extends Control
#Создание пула ячеек. (число ячеек можно в любой момент изменить.)
var inventoryCellsPool = []
var curInv = []
var focusedCellID = null
#Параметр указывающий является ли открытый инвентарь инвентарем персонажа или предмета
var PlayerInventory = false

func _ready():
	$VBC/HBC/VBoxContainer2/Use.disabled = true
	$VBC/HBC/VBoxContainer2/Remove.disabled = true




func _process(delta):
	
	if Input.is_action_just_pressed(\"Q_Action\"):
		
		get_tree().paused = false
		queue_free()
		pass

		
	
	pass
func inventoryInit(currentInventory):
	curInv = currentInventory
	var texturePanel
	var preloadCell = preload(\"res://Scenes/main/panel.tscn\")
	for i in range (currentInventory.size()- 1):
		inventoryCellsPool.append(preloadCell.instantiate())
		$VBC/GC.add_child(inventoryCellsPool[i])
		inventoryCellsPool[i].panelID = i
		texturePanel = load(Global.itemList[currentInventory[i]][\"icon\"])
		inventoryCellsPool[i].get_node(\"CC/TextureRect\").texture = texturePanel
		
		
	visible = true
	
	
func inventoryUpdate(currentInventory):
	var texturePanel
	#проверка, если инвентарь игрока, то выполняется обычный сценарий, если объекта (сундук), то его инвентарь меняется
	# через сигнал
	if PlayerInventory == true:
		Global.inventory = curInv
		Global.inventorySort()
		currentInventory = Global.inventory
		curInv = Global.inventory
	else:
		#Здесь можно написать одине единственный сигнал для изменения инвентаря любых остальных объектов свою ноду.
		pass
	
	for i in range (currentInventory.size()-1):
		if inventoryCellsPool[i] == null:
			var preloadCell = preload(\"res://Scenes/main/panel.tscn\")
			inventoryCellsPool[i] = preloadCell.instantiate()
			$VBC/GC.add_child(inventoryCellsPool[i])
		inventoryCellsPool[i].panelID = i
		texturePanel = load(Global.itemList[currentInventory[i]][\"icon\"])
		inventoryCellsPool[i].get_node(\"CC/TextureRect\").texture = texturePanel
	
	$VBC/HBC/VBoxContainer2/Use.disabled = true
	$VBC/HBC/VBoxContainer2/Remove.disabled = true
	$VBC/HBC/VBoxContainer/Label.text = \"Name\"
	$VBC/HBC/VBoxContainer/Label2.text = \"Description... \"
	
	
func focusInventory(focusedCell):
	focusedCellID = focusedCell
	print(focusedCell)
	$VBC/HBC/VBoxContainer/Label.text = Global.itemList[curInv[focusedCell]][\"name\"]
	$VBC/HBC/VBoxContainer/Label2.text = Global.itemList[curInv[focusedCell]][\"description\"]
	if Global.itemList[curInv[focusedCell]][\"usable\"] == true:
		$VBC/HBC/VBoxContainer2/Use.disabled = false
	$VBC/HBC/VBoxContainer2/Remove.disabled = false
	pass


func _on_add_pressed():
	if curInv.size() < 37:
		curInv.append(null)
		inventoryCellsPool.append(null)
		inventoryUpdate(curInv)


func _on_del_pressed():
	curInv.pop_back()
	inventoryCellsPool[inventoryCellsPool.size() - 1].queue_free()
	inventoryCellsPool.pop_back()


func _on_use_pressed():
	Global.use(Global.itemList[curInv[focusedCellID]][\"name\"])
	if Global.itemList[curInv[focusedCellID]][\"unlimited\"] == false:
		curInv[focusedCellID] = null
		inventoryUpdate(curInv)


func _on_remove_pressed():
	Global.inventoryDrop()
	var parent = get_parent()
	while parent:
		if parent.get_parent().get_parent() is Node:
			parent = parent.get_parent()
		else:
			break
	parent.itemDrop(curInv[focusedCellID])
	
	curInv[focusedCellID] = null
	inventoryUpdate(curInv)



func _on_clear_pressed():
	
	for i in range(curInv.size() - 1):
		curInv[i] = null
	inventoryUpdate(curInv)

"

[sub_resource type="GDScript" id="GDScript_o8viw"]
script/source = "extends \"res://Scenes/main/panel.gd\"


# Called when the node enters the scene tree for the first time.
func _ready():
	panelID = 0
	pass # Replace with function body.


# Called every frame. 'delta' is the elapsed time since the previous frame.
func _process(delta):
	pass
"

[sub_resource type="LabelSettings" id="LabelSettings_iqxfp"]
font_size = 40

[sub_resource type="LabelSettings" id="LabelSettings_xpo2i"]
font_size = 30

[node name="Inventory" type="Control"]
process_mode = 2
layout_mode = 3
anchors_preset = 15
anchor_right = 1.0
anchor_bottom = 1.0
grow_horizontal = 2
grow_vertical = 2
scale = Vector2(0.2, 0.2)
script = SubResource("GDScript_ubhp6")

[node name="CenterContainer" type="CenterContainer" parent="."]
layout_mode = 1
anchors_preset = 8
anchor_left = 0.5
anchor_top = 0.5
anchor_right = 0.5
anchor_bottom = 0.5
offset_left = -0.00012207
offset_top = -6.10352e-05
offset_right = -0.00012207
offset_bottom = -6.10352e-05
grow_horizontal = 2
grow_vertical = 2
scale = Vector2(2.14671, -2.15155)

[node name="Sprite2D" type="Sprite2D" parent="CenterContainer"]
modulate = Color(1, 1, 1, 0.439216)
position = Vector2(0, 0.929565)
scale = Vector2(31.6682, 22.1758)
texture = ExtResource("1_g7p03")

[node name="VBC" type="VBoxContainer" parent="."]
layout_mode = 1
anchors_preset = 8
anchor_left = 0.5
anchor_top = 0.5
anchor_right = 0.5
anchor_bottom = 0.5
offset_left = -500.0
offset_top = -350.0
offset_right = 500.0
offset_bottom = 350.0
grow_horizontal = 2
grow_vertical = 2
pivot_offset = Vector2(0, 400)
size_flags_horizontal = 4
size_flags_vertical = 4
size_flags_stretch_ratio = 1.7

[node name="GC" type="GridContainer" parent="VBC"]
custom_minimum_size = Vector2(100, 100)
layout_mode = 2
size_flags_vertical = 3
size_flags_stretch_ratio = 1.7
theme_override_constants/h_separation = 15
theme_override_constants/v_separation = 15
columns = 9

[node name="Panel" parent="VBC/GC" instance=ExtResource("1_aqgha")]
visible = false
layout_mode = 2
script = SubResource("GDScript_o8viw")

[node name="HBC" type="HBoxContainer" parent="VBC"]
layout_mode = 2
size_flags_vertical = 3

[node name="VBoxContainer" type="VBoxContainer" parent="VBC/HBC"]
layout_mode = 2
size_flags_horizontal = 3
size_flags_stretch_ratio = 2.51

[node name="Label" type="Label" parent="VBC/HBC/VBoxContainer"]
layout_mode = 2
size_flags_vertical = 3
text = "Cell"
label_settings = SubResource("LabelSettings_iqxfp")

[node name="Label2" type="Label" parent="VBC/HBC/VBoxContainer"]
layout_mode = 2
size_flags_vertical = 3
size_flags_stretch_ratio = 2.5
text = "Description... "
label_settings = SubResource("LabelSettings_xpo2i")
autowrap_mode = 2

[node name="VBoxContainer2" type="VBoxContainer" parent="VBC/HBC"]
layout_mode = 2
size_flags_horizontal = 3

[node name="HBoxContainer" type="HBoxContainer" parent="VBC/HBC/VBoxContainer2"]
layout_mode = 2
size_flags_vertical = 3

[node name="Add" type="Button" parent="VBC/HBC/VBoxContainer2/HBoxContainer"]
layout_mode = 2
size_flags_horizontal = 3
size_flags_vertical = 3
theme_override_font_sizes/font_size = 20
text = "Add clear cell"

[node name="Del" type="Button" parent="VBC/HBC/VBoxContainer2/HBoxContainer"]
layout_mode = 2
size_flags_horizontal = 3
size_flags_vertical = 3
theme_override_font_sizes/font_size = 30
text = "- Cell"

[node name="Use" type="Button" parent="VBC/HBC/VBoxContainer2"]
layout_mode = 2
size_flags_vertical = 3
theme_override_font_sizes/font_size = 39
text = "Use"

[node name="Remove" type="Button" parent="VBC/HBC/VBoxContainer2"]
layout_mode = 2
size_flags_vertical = 3
theme_override_font_sizes/font_size = 30
text = "Drop item"

[node name="Clear" type="Button" parent="VBC/HBC/VBoxContainer2"]
layout_mode = 2
size_flags_vertical = 3
theme_override_font_sizes/font_size = 30
text = "Clear all cells"

[connection signal="pressed" from="VBC/HBC/VBoxContainer2/HBoxContainer/Add" to="." method="_on_add_pressed"]
[connection signal="pressed" from="VBC/HBC/VBoxContainer2/HBoxContainer/Del" to="." method="_on_del_pressed"]
[connection signal="pressed" from="VBC/HBC/VBoxContainer2/Use" to="." method="_on_use_pressed"]
[connection signal="pressed" from="VBC/HBC/VBoxContainer2/Remove" to="." method="_on_remove_pressed"]
[connection signal="pressed" from="VBC/HBC/VBoxContainer2/Clear" to="." method="_on_clear_pressed"]

[editable path="VBC/GC/Panel"]
